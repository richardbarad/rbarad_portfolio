{
  "hash": "490028f5e8de4bfdad13968e07b7e10b",
  "result": {
    "markdown": "---\ntitle: \"Analyzing Fundraising Data for a Poltical Campaign\"\nauthor: \"Richard Barad\"\nimage: 'election_comparison.png'\ndate: \"2021-09-26\"\ncategories: [Politics, Python]\nformat: \n  html:\n    toc: true\n    code-fold: true\n    fontsize: 11pt\nexecute:\n  eval: false\n---\n\n# Overview\n\nIn 2021 I was a fellow with Bluebonnet Data, and worked as a volunteer data analyst for a local political campaign. Through this fellowship I was trained on political data methods, such as how to work with census data, the voter file, and VAN. \n\nIn my volunteer role, I collaborated closely with the campaigns Fundraising Manager and developed python scripts to analyze their historical fundraising data which was stored in NGP. The campaign was specifically interested in understanding what contribution types were bringing in the largest amount of funds and determining if their fundraising for the current election cycle was keeping up with previous election cycles. Below I have included a presentation that shows the results of my analysis. All data analysis was carried out using Python and the python script used to run the data analysis and output charts is also included below.\n\n\n# Presentation\n\n\n```{=html}\n<iframe \n  width=\"100%\" \n  height=\"500\" \n  src=\"https://docs.google.com/presentation/d/1jAjawmRS6lc9EfXe-MapZtE8Cmb8P4mL/edit?usp=sharing&ouid=112612334862964390406&rtpof=true&sd=true\">\n</iframe>\n```\n\n\n# Script\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Sep  6 15:37:12 2021\n\n@author: richa\n\"\"\"\n\nimport os\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nfrom matplotlib import dates as mdates\nimport numpy as np\nimport datetime\n\nos.chdir(r'..\\..\\data\\processed\\ngp_analysis')\n\nngp_excel = r'..\\..\\raw\\ngp\\ngp_all_3.xlsx'\n\nend_date = '2021-10-01'\n\nngp_excel_df = pd.read_excel(ngp_excel)\n\n# ACCES GOOGLE SHEET\n\nsource_code_group_url = 'https://docs.google.com/spreadsheets/d/1-aMlLj5F7NQQsxybPNbCIkjWeVi2gWQMNV_Z8OeDtxU/gviz/tq?tqx=out:csv&sheet=Sheet1'\nsource_code_group = pd.read_csv(source_code_group_url)\n\n#Clean data, create generlized type column by combining information from multiple columns\nngp_excel_df.loc[ngp_excel_df['Contribution ID'] == 2589300,'Source Code'] = 'Party'\nngp_excel_df.loc[ngp_excel_df['Contribution ID'] == 2589300,'Source Code Path'] = 'Organizations/Party'\nngp_excel_df = ngp_excel_df[ngp_excel_df['Date Received'] < end_date]\nngp_excel_df['type'] = np.nan\nngp_excel_df.loc[ngp_excel_df['Payment Method'] == 'Cash','type'] = 'Cash'\nngp_excel_df.loc[ngp_excel_df['Payment Method'] == 'In-Kind','type'] = 'In-Kind'\nngp_excel_df.loc[ngp_excel_df['Contribution Type'] == 'In-kind Contribution','type'] = 'In-Kind'\nngp_excel_df = ngp_excel_df.merge(source_code_group, how='left',on=['Source Code','Source Code Path'])\n\nngp_excel_df['type'].fillna(ngp_excel_df['Source_Code_Gen'], inplace=True)\nngp_excel_df['type'].fillna('Other or Unkown', inplace=True)\nngp_excel_df['year'] = pd.DatetimeIndex(ngp_excel_df['Date Received']).year\nngp_excel_df['month'] = pd.DatetimeIndex(ngp_excel_df['Date Received']).month\nngp_excel_df.to_excel('ngp_data_class.xlsx')\n\ntypes = ngp_excel_df['type'].unique()\n\n#Get aggregate statistics by year and month\n\nos.chdir(r'..\\..\\..\\data\\processed\\ngp_analysis')\ndf_agg = ngp_excel_df.groupby(['year','month','type'],as_index=False)['Amount'].agg(['sum','count','mean'])\ndf_agg.reset_index(inplace=True)\ndf_agg['day'] = 1\ndf_agg['date'] = pd.to_datetime(df_agg[['year','month','day']])\ndf_agg.to_excel('donation_summary.xlsx')\n\n#Function to create chart showing donation count and sum by month for specific data\ndef create_count_sum_chart(df,sum_field,count_field,t):\n    fig, ax1 = plt.subplots()\n    ax1.plot(df.index,df[sum_field],alpha=0.5)\n    ax1.grid(axis='y',linewidth=0.5)\n    ax1.set_ylabel(\"Amounted Recieved Per Month\",color='blue')\n    ax1.set_xlabel(\"Month\")\n    ax1.set_ylim(bottom=0)\n    ax2 = ax1.twinx()\n    ax2.plot(df.index,df[count_field],color='red', alpha=0.5)\n    ax2.set_ylim(bottom=0)\n    ax2.set_ylabel(\"Number of Donations per month\",color='red')\n    one_month = mdates.MonthLocator(interval=1)\n    ax1.tick_params(axis='y', colors='blue')\n    ax2.tick_params(axis='y', colors='red')\n    ax1.xaxis.set_minor_locator(one_month)\n    three_month = mdates.MonthLocator(interval=3)\n    ax1.xaxis.set_major_locator(three_month)\n    ax1.set_xticklabels(ax.get_xticks(), rotation = 90)\n    ax1.xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m'))\n    fig_name = t + '_sumandcountpermonth.png'\n    plt.title(\"Number of Donations from \" + t)\n    plt.savefig(fig_name, bbox_inches=\"tight\")\n    plt.show()\n\n#Function to create chart showing donation count by month for specific data\ndef create_sum_chart(df,field,title):\n    fig, ax = plt.subplots()\n    ax.plot(df.index,df[field])\n    ax.grid(axis='y',linewidth=0.5)\n    ax.set_ylabel(\"Amounted Recieved Per Month\")\n    ax.set_xlabel(\"Month\")\n    ax.set_ylim(bottom=0)\n    one_month = mdates.MonthLocator(interval=1)\n    ax.xaxis.set_minor_locator(one_month)\n    three_month = mdates.MonthLocator(interval=3)\n    ax.xaxis.set_major_locator(three_month)\n    fig_name = field + '_totalpermonth.png'\n    plt.title(\"Total Amount Donated from \" + title)\n    plt.xticks(rotation = 90)\n    plt.savefig(fig_name, bbox_inches=\"tight\")\n    plt.show()\n\n#Function to create chart showing donation sum by month for specific data\ndef create_count_chart(df,field,title):\n    fig, ax = plt.subplots()\n    ax.plot(df.index,df[field])\n    ax.set_ylabel(\"Number of Donations per month\")\n    ax.grid(axis='y',linewidth=0.5)\n    ax.set_xlabel(\"Month\")\n    ax.set_ylim(bottom=0)\n    one_month = mdates.MonthLocator(interval=1)\n    ax.xaxis.set_minor_locator(one_month)\n    three_month = mdates.MonthLocator(interval=3)\n    ax.xaxis.set_major_locator(three_month)\n    fig_name = field + '_countpermonth.png'\n    plt.title(\"Number of Donations per month from \" + title)\n    plt.xticks(rotation = 90)\n    plt.savefig(fig_name, bbox_inches=\"tight\")\n    plt.show()\n\n#Pivot data, seperate columns for each type of donation\ndf_agg_pivot = df_agg.pivot_table(index='date',columns='type',values=['count','sum'])\ndf_agg_pivot.fillna(0,inplace=True)\ndf_agg_pivot.columns = ['_'.join(x) for x in df_agg_pivot.columns]\ncount_list = []\nsum_list= []\n\nos.chdir(r'..\\..\\..\\reports\\figures\\ngp')\n\nfor t in types:\n    sum_field = 'sum_' + t\n    count_field = 'count_' + t\n    create_sum_chart(df_agg_pivot,sum_field,t)\n    create_count_chart(df_agg_pivot,count_field,t)\n    create_count_sum_chart(df_agg_pivot,sum_field,count_field,t)\n\nfor t in types:\n    count_list.append('count_' + t)\n    sum_list.append('sum_' + t)\n\ndf_agg_pivot['Total_Cash_onhand'] = (df_agg_pivot[sum_list].sum(axis=1)) - df_agg_pivot['sum_In-Kind']\ndf_agg_pivot['Count_Cash_Donation'] = (df_agg_pivot[count_list].sum(axis=1)) - df_agg_pivot['count_In-Kind']\n\ncreate_sum_chart(df_agg_pivot,'Total_Cash_onhand','All Monetary Contributions')\ncreate_count_chart(df_agg_pivot,'Count_Cash_Donation','All Monetary Contributions')\ncreate_count_sum_chart(df_agg_pivot,'Total_Cash_onhand','Count_Cash_Donation','All Monetary Contributions')\n\n\ndf_agg_cash_only = df_agg[df_agg['type'] != 'In-Kind']\ndf_agg_date_filt = df_agg_cash_only[df_agg_cash_only['year'].isin([2017,2019,2021])]\ndf_agg_pivot2 = df_agg_date_filt.pivot_table(index='month',columns='year',values='sum',aggfunc='sum')\ndf_agg_pivot2.loc[1,2017] = 0\ndf_agg_pivot2.loc[2,2021] = 0\ndf_agg_pivot2.loc[2,2019] = 0\nprint(df_agg_pivot2)\n\nfig, ax = plt.subplots()\nax.plot(df_agg_pivot2.index,df_agg_pivot2[2017],label='2017', alpha=0.5)\nax.plot(df_agg_pivot2.index,df_agg_pivot2[2019],label='2019', alpha=0.5)\nax.plot(df_agg_pivot2.index,df_agg_pivot2[2021],label='2021', alpha=0.5)\nax.set_xticks(np.arange(1,13))\nax.set_xticklabels(['Jan', 'Feb','Mar.','Apr.','May','Jun.','Jul.','Aug.','Sep.','.Oct','.Nov','.Dec'])\nax.set_ylabel(\"Total Cash Contributions\")\nax.grid(axis='y',linewidth=0.5)\nplt.title('$ Contributions by Month for 2017, 2019, 2021 Election Cycles')\nax.set_xlabel(\"Month\")\nplt.legend()\nplt.savefig('election_comparison.png', bbox_inches=\"tight\")\nplt.show()\n```\n:::\n\n\n",
    "supporting": [
      "bluebonnet_files"
    ],
    "filters": [],
    "includes": {}
  }
}